# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
    # specify the version you desire here
    - image: rocker/verse:4.1.1
    working_directory: ~/repo

    # The resource_class feature allows configuring CPU and RAM resources for each job. Different resource classes are available for different executors. https://circleci.com/docs/2.0/configuration-reference/#resourceclass
    resource_class: large

    steps:
    - checkout

    # we cache once a day
    - restore_cache:
        keys:
        - when-{{ `date` }}

    - run:
        name: Prepare environment
        command: |
          apt-get update
          apt-get install git curl ssh libcurl4-openssl-dev libssl-dev build-essential ninja-build cmake -y
          git fetch --all --tags
          git remote set-url origin https://${GITHUB_TOKEN}@github.com/molgenis/molgenis-r-armadillo.git
          mkdir -m 700 -p /root/.ssh
          ssh-keyscan -H -t rsa github.com  > ~/.ssh/known_hosts
          install2.r --skipinstalled --repo https://cloud.r-project.org git2r
          Rscript -e "git2r::config(user.email = 'molgenis+ci@gmail.com', user.name = 'MOLGENIS Jenkins')"
          export PACKAGE=`grep Package DESCRIPTION | head -n1 | cut -d':' -f2 | xargs`
          export TAG=`grep Version DESCRIPTION | head -n1 | cut -d':' -f2 | xargs` 
          echo "Prepared environment for test PR / release master of ${PACKAGE}:${TAG}"

    - run:
        name: install R stuffs, skipinstalled using cache when this branch has installed them before
        command: |
          install2.r --skipinstalled --repo https://cloud.r-project.org devtools pkgdown markdown rmarkdown mockery webmockr httr urltools xml2 arrow MolgenisAuth DSMolgenisArmadillo git2r ellipsis vctrs covr

    - save_cache:
        paths:
        - /usr/local/lib/R/library
        - /usr/local/lib/R/site-library
        - /tmp/downloaded_packages
        key: when-{{ `date` }}

    - run:
        name: check and build artifacts. todo find a way to automatically increment version number based on PR
        command: |
          Rscript -e 'devtools::check(remote=TRUE, force_suggests = TRUE, error_on="error")'
          Rscript -e 'library(covr);codecov()'
          R CMD build .
          Rscript -e "devtools::check_built(path = \"./${PACKAGE}_${TAG}.tar.gz\", remote=TRUE, force_suggests = TRUE)"
          Rscript -e "pkgdown::build_site()"

    - run:
        name: Release to nexus and to github (only on master)
        command: |
          if [ "${CIRCLE_BRANCH}" = "master" ]; then
            echo \"Releasing ${PACKAGE} v${TAG}\"
            set +x; curl -v --user '${NEXUS_USER}:${NEXUS_PASS}' --upload-file ${PACKAGE}_${TAG}.tar.gz ${REGISTRY_DEV}/src/contrib/${PACKAGE}_${TAG}.tar.gz
            git tag v${TAG}
            git push --tags origin master
            set +x; Rscript -e "pkgdown::deploy_site_github(ssh_id = '${GITHUB_DEPLOY_PRIVATE_KEY_BASE64}', tarball = '${PACKAGE}_${TAG}.tar.gz', repo_slug='${REPOSITORY}')"
          fi

    - run:
        name: Message slack
        command: |
          if [ "${CIRCLE_BRANCH}" = "master" ]
          then
            curl -d "token=${SLACK_TOKEN}" \
            -d "text=molgenis-r-armadillo version: v${TAG} is released." \
            -d "channel=C02AZDG6QQ7" \
            -X POST https://slack.com/api/chat.postMessage          
          else
            curl -d "token=${SLACK_TOKEN}" \
            -d "text=*<${CIRCLE_PULL_REQUEST}|Circle-CI » Armadillo » molgenis-r-armadillo » PR-${CIRCLE_PULL_REQUEST##*/} #${CIRCLE_BUILD_NUM}>*"
            -d "channel=C02AZDG6QQ7" \
            -X POST https://slack.com/api/chat.postMessage
          fi
